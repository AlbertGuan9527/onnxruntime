##### start trigger Don't edit it manually, Please do edit set-trigger-rules.py ####
trigger:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - CONTRIBUTING.md
    - BUILD.md
    - 'js/web'
    - 'onnxruntime/core/providers/js'
pr:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - CONTRIBUTING.md
    - BUILD.md
    - 'js/web'
    - 'onnxruntime/core/providers/js'
#### end trigger ####
parameters:
  - name: UseTensorrtOssParser
    displayName: Use TensorRT-OSS Parser
    type: boolean
    default: false

variables:
  - name: parser
    ${{ if eq(parameters.UseTensorrtOssParser, true) }}:
      value: "--use_tensorrt_oss_parser"
    ${{ if eq(parameters.UseTensorrtOssParser, false) }}:
      value: ""

jobs:
- job: 'build'
  pool: 'onnxruntime-Win2022-GPU-A10'
  variables:
    MsbuildArguments: '-detailedsummary -maxcpucount -consoleloggerparameters:PerformanceSummary'
    EnvSetupScript: setup_env_trt.bat
    skipComponentGovernanceDetection: true
    TODAY: $[format('{0:dd}{0:MM}{0:yyyy}', pipeline.startTime)]
  timeoutInMinutes: 150
  workspace:
    clean: all
  steps:
  - template: templates/jobs/win-ci-prebuild-steps.yml
    parameters:
      EnvSetupScript: $(EnvSetupScript)
      DownloadCUDA: true
      DownloadTRT: true
      BuildArch: 'x64'
      BuildConfig: RelWithDebInfo
      MachinePool: 'onnxruntime-Win2022-GPU-A10'
      WithCache: true
      Today: $(Today)

  - template: templates/jobs/win-ci-build-steps.yml
    parameters:
      WithCache: True
      Today: $(TODAY)
      AdditionalKey: "gpu-tensorrt | RelWithDebInfo"
      BuildPyArguments: '--config RelWithDebInfo ${{ variables.parser }} --parallel --use_binskim_compliant_compile_flags --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --build_shared_lib --update --cmake_generator "Visual Studio 17 2022" --build_wheel --enable_onnx_tests --use_tensorrt --tensorrt_home="$(Agent.TempDirectory)\TensorRT-10.2.0.19.Windows10.x86_64.cuda-12.5" --cuda_home="$(Agent.TempDirectory)\v12.2" --cmake_extra_defines CMAKE_CUDA_ARCHITECTURES=86'
      MsbuildArguments: $(MsbuildArguments)
      BuildArch: 'x64'
      Platform: 'x64'
      BuildConfig: RelWithDebInfo

  - task: PythonScript@0
    displayName: 'Build wheel'
    inputs:
      scriptPath: '$(Build.SourcesDirectory)\setup.py'
      arguments: 'bdist_wheel'
      workingDirectory: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo'

  - script: |
     mklink  /D /J $(Build.BinariesDirectory)\RelWithDebInfo\models $(Build.BinariesDirectory)\models
     DIR dist\ /S /B > wheel_filename_file
     set /p WHEEL_FILENAME=<wheel_filename_file
     del wheel_filename_file
     python.exe -m pip install -q --upgrade %WHEEL_FILENAME%
     set PATH=$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo;%PATH%
     python $(Build.SourcesDirectory)\tools\ci_build\build.py --config RelWithDebInfo ${{ variables.parser }} --use_binskim_compliant_compile_flags --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --build_shared_lib --test --cmake_generator "Visual Studio 17 2022" --build_wheel --enable_onnx_tests --use_tensorrt --tensorrt_home="$(Agent.TempDirectory)\TensorRT-10.2.0.19.Windows10.x86_64.cuda-12.5"  --cuda_home="$(Agent.TempDirectory)\v12.2" --cmake_extra_defines CMAKE_CUDA_ARCHITECTURES=86

    workingDirectory: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo'
    displayName: 'Run tests'
